#!groovy

pipeline
{
  agent any //specifies jenkins execution environment, executor and checks out a repository

  environment {
    PROJECT_NAME = "${env.JOB_NAME.replaceAll(/\\/.*$/, '')}"
    OPENSHIFT_AUTH_TOKEN = credentials('OPENSHIFT_AUTH_TOKEN')
  }

  options
  {
    buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '10'))
  }

  tools
  {
    maven 'Maven 3.3.9'
    jdk 'jdk8'
  }

  stages //list of stages specifying in which stage the pipeline steps will be executed
  {


    stage('Deploy to DEV')
    {

      steps
      {
        withEnv(["SKIP_TLS=1"])
        {
          echo 'Deploying....'
          openshiftBuild apiURL: "${env.OPENSHIFT_API_URL}", authToken: "${env.OPENSHIFT_AUTH_TOKEN}", bldCfg: 'gmm-spring-pipeline', buildName: '', checkForTriggeredDeployments: 'true', commitID: '', namespace: "example-project", showBuildLogs: 'true', verbose: 'false', waitTime: '', waitUnit: 'sec'
      }
        sleep 5
      }
    }




  }
}
